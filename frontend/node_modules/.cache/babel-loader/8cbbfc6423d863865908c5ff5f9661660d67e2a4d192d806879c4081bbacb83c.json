{"ast":null,"code":"var _jsxFileName = \"/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/FormInput.js\",\n  _s = $RefreshSig$();\n/**\n * \n */\nimport React, { useState } from 'react';\nimport { Grid, TextField, Button, Select, MenuItem, InputLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [trenchType, setTrenchType] = useState('Distribution');\n  const [conduits, setConduits] = useState([]);\n  const handleAddConduit = () => {\n    setConduits([...conduits, {\n      type: '',\n      sizes: '',\n      count: ''\n    }]);\n  };\n  const handleInputChange = (index, field, value) => {\n    const updatedConduits = [...conduits];\n    updatedConduits[index][field] = value;\n    setConduits(updatedConduits);\n  };\n  const handleSubmit = () => {\n    onSubmit({\n      trenchType,\n      conduits\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Trench Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: trenchType,\n        onChange: e => setTrenchType(e.target.value),\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Distribution\",\n          children: \"Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Service\",\n          children: \"Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), conduits.map((conduit, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Type\",\n          value: conduit.type,\n          onChange: e => handleInputChange(index, 'type', e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Sizes (comma-separated)\",\n          value: conduit.sizes,\n          onChange: e => handleInputChange(index, 'sizes', e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Count\",\n          type: \"number\",\n          value: conduit.count,\n          onChange: e => handleInputChange(index, 'count', e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleAddConduit,\n        children: \"Add Conduit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(FormInput, \"e1M9nJHhgRcUlW+9RP3VP0AJXwU=\");\n_c = FormInput;\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["React","useState","Grid","TextField","Button","Select","MenuItem","InputLabel","jsxDEV","_jsxDEV","FormInput","onSubmit","_s","trenchType","setTrenchType","conduits","setConduits","handleAddConduit","type","sizes","count","handleInputChange","index","field","value","updatedConduits","handleSubmit","container","spacing","children","item","xs","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","fullWidth","map","conduit","label","variant","onClick","color","_c","$RefreshReg$"],"sources":["/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/FormInput.js"],"sourcesContent":["/**\n * \n */\nimport React, { useState } from 'react';\nimport { Grid, TextField, Button, Select, MenuItem, InputLabel } from '@mui/material';\n\nconst FormInput = ({ onSubmit }) => {\n  const [trenchType, setTrenchType] = useState('Distribution');\n  const [conduits, setConduits] = useState([]);\n\n  const handleAddConduit = () => {\n    setConduits([...conduits, { type: '', sizes: '', count: '' }]);\n  };\n\n  const handleInputChange = (index, field, value) => {\n    const updatedConduits = [...conduits];\n    updatedConduits[index][field] = value;\n    setConduits(updatedConduits);\n  };\n\n  const handleSubmit = () => {\n    onSubmit({ trenchType, conduits });\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <InputLabel>Trench Type</InputLabel>\n        <Select\n          value={trenchType}\n          onChange={(e) => setTrenchType(e.target.value)}\n          fullWidth\n        >\n          <MenuItem value=\"Distribution\">Distribution</MenuItem>\n          <MenuItem value=\"Service\">Service</MenuItem>\n        </Select>\n      </Grid>\n      {conduits.map((conduit, index) => (\n        <Grid container spacing={2} key={index}>\n          <Grid item xs={4}>\n            <TextField\n              label=\"Type\"\n              value={conduit.type}\n              onChange={(e) => handleInputChange(index, 'type', e.target.value)}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              label=\"Sizes (comma-separated)\"\n              value={conduit.sizes}\n              onChange={(e) => handleInputChange(index, 'sizes', e.target.value)}\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              label=\"Count\"\n              type=\"number\"\n              value={conduit.count}\n              onChange={(e) => handleInputChange(index, 'count', e.target.value)}\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item xs={12}>\n        <Button variant=\"contained\" onClick={handleAddConduit}>\n          Add Conduit\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n          Submit\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FormInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
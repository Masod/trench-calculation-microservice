{"ast":null,"code":"var _jsxFileName = \"/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/DownloadButton.js\";\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadButton = ({\n  results\n}) => {\n  const handleDownload = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/trench/excel', results, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'trench_results.xlsx');\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error('Error downloading Excel:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginTop: '10px'\n    },\n    onClick: handleDownload,\n    children: \"Download Excel Sheet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = DownloadButton;\nexport default DownloadButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"names":["React","Button","axios","jsxDEV","_jsxDEV","DownloadButton","results","handleDownload","response","post","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","error","console","variant","color","style","marginTop","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/DownloadButton.js"],"sourcesContent":["import React from 'react';\nimport { Button } from '@mui/material';\nimport axios from 'axios';\n\nconst DownloadButton = ({ results }) => {\n  const handleDownload = async () => {\n    try {\n      const response = await axios.post(\n        'http://localhost:8080/api/trench/excel',\n        results,\n        { responseType: 'blob' }\n      );\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'trench_results.xlsx');\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error('Error downloading Excel:', error);\n    }\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      style={{ marginTop: '10px' }}\n      onClick={handleDownload}\n    >\n      Download Excel Sheet\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAC/B,wCAAwC,EACxCH,OAAO,EACP;QAAEI,YAAY,EAAE;MAAO,CACzB,CAAC;MACD,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;MACjE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;MACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,qBAAqB,CAAC;MACpDH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACd,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACErB,OAAA,CAACH,MAAM;IACL0B,OAAO,EAAC,WAAW;IACnBC,KAAK,EAAC,SAAS;IACfC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAC7BC,OAAO,EAAExB,cAAe;IAAAyB,QAAA,EACzB;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GA7BIhC,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
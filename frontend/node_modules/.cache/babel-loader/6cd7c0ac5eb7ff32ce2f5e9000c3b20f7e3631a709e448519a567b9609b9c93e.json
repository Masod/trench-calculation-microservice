{"ast":null,"code":"var _jsxFileName = \"/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/DownloadButton.js\";\nimport React from 'react';\nimport { Button } from '@mui/material';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadButton = ({\n  results\n}) => {\n  const handleDownload = () => {\n    // Prepare data for Excel\n    const data = [{\n      Header: 'Violations',\n      Value: results.violations.join(', ') || 'None'\n    }, {\n      Header: 'Final Trench Width',\n      Value: results.finalTrenchWidth\n    }, {\n      Header: 'Final Trench Depth',\n      Value: results.finalTrenchDepth\n    }];\n\n    // Convert data to worksheet\n    const worksheet = XLSX.utils.json_to_sheet(data, {\n      header: ['Header', 'Value']\n    });\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Trench Results');\n\n    // Create Excel file and trigger download\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const blob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'trench_results.xlsx');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      marginTop: '10px'\n    },\n    onClick: handleDownload,\n    children: \"Download Excel Sheet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = DownloadButton;\nexport default DownloadButton;\nvar _c;\n$RefreshReg$(_c, \"DownloadButton\");","map":{"version":3,"names":["React","Button","XLSX","jsxDEV","_jsxDEV","DownloadButton","results","handleDownload","data","Header","Value","violations","join","finalTrenchWidth","finalTrenchDepth","worksheet","utils","json_to_sheet","header","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","variant","color","style","marginTop","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/DownloadButton.js"],"sourcesContent":["import React from 'react';\nimport { Button } from '@mui/material';\nimport * as XLSX from 'xlsx';\n\nconst DownloadButton = ({ results }) => {\n  const handleDownload = () => {\n    // Prepare data for Excel\n    const data = [\n      { Header: 'Violations', Value: results.violations.join(', ') || 'None' },\n      { Header: 'Final Trench Width', Value: results.finalTrenchWidth },\n      { Header: 'Final Trench Depth', Value: results.finalTrenchDepth },\n    ];\n\n    // Convert data to worksheet\n    const worksheet = XLSX.utils.json_to_sheet(data, { header: ['Header', 'Value'] });\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Trench Results');\n\n    // Create Excel file and trigger download\n    const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    const blob = new Blob([excelBuffer], { type: 'application/octet-stream' });\n    const url = window.URL.createObjectURL(blob);\n\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'trench_results.xlsx');\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      style={{ marginTop: '10px' }}\n      onClick={handleDownload}\n    >\n      Download Excel Sheet\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA,MAAMC,IAAI,GAAG,CACX;MAAEC,MAAM,EAAE,YAAY;MAAEC,KAAK,EAAEJ,OAAO,CAACK,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,IAAI;IAAO,CAAC,EACxE;MAAEH,MAAM,EAAE,oBAAoB;MAAEC,KAAK,EAAEJ,OAAO,CAACO;IAAiB,CAAC,EACjE;MAAEJ,MAAM,EAAE,oBAAoB;MAAEC,KAAK,EAAEJ,OAAO,CAACQ;IAAiB,CAAC,CAClE;;IAED;IACA,MAAMC,SAAS,GAAGb,IAAI,CAACc,KAAK,CAACC,aAAa,CAACT,IAAI,EAAE;MAAEU,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO;IAAE,CAAC,CAAC;IACjF,MAAMC,QAAQ,GAAGjB,IAAI,CAACc,KAAK,CAACI,QAAQ,CAAC,CAAC;IACtClB,IAAI,CAACc,KAAK,CAACK,iBAAiB,CAACF,QAAQ,EAAEJ,SAAS,EAAE,gBAAgB,CAAC;;IAEnE;IACA,MAAMO,WAAW,GAAGpB,IAAI,CAACqB,KAAK,CAACJ,QAAQ,EAAE;MAAEK,QAAQ,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC7E,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA2B,CAAC,CAAC;IAC1E,MAAMG,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IAE5C,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;IACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,qBAAqB,CAAC;IACpDH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;EACjC,CAAC;EAED,oBACE5B,OAAA,CAACH,MAAM;IACLwC,OAAO,EAAC,WAAW;IACnBC,KAAK,EAAC,SAAS;IACfC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAC7BC,OAAO,EAAEtC,cAAe;IAAAuC,QAAA,EACzB;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GArCI9C,cAAc;AAuCpB,eAAeA,cAAc;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
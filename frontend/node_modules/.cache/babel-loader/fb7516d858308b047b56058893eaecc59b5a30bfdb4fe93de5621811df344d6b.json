{"ast":null,"code":"var _jsxFileName = \"/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/ResultsDisplay.js\";\nimport React from 'react';\nimport { Grid, Typography, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsDisplay = ({\n  results\n}) => {\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Calculation Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Violations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this), results.violations && results.violations.length > 0 ? results.violations.map((violation, index) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"- \", violation]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No violations found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            style: {\n              marginTop: '10px'\n            },\n            children: [\"Trench Width: \", results.finalTrenchWidth || 'N/A', \" inches\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Trench Depth: \", results.finalTrenchDepth || 'N/A', \" inches\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultsDisplay;\nexport default ResultsDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultsDisplay\");","map":{"version":3,"names":["React","Grid","Typography","Card","CardContent","jsxDEV","_jsxDEV","ResultsDisplay","results","container","spacing","children","item","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","violations","length","map","violation","index","style","marginTop","finalTrenchWidth","finalTrenchDepth","_c","$RefreshReg$"],"sources":["/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/ResultsDisplay.js"],"sourcesContent":["import React from 'react';\nimport { Grid, Typography, Card, CardContent } from '@mui/material';\n\nconst ResultsDisplay = ({ results }) => {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h6\">Calculation Results</Typography>\n            <Typography>Violations:</Typography>\n            {results.violations && results.violations.length > 0 ? (\n              results.violations.map((violation, index) => (\n                <Typography key={index}>- {violation}</Typography>\n              ))\n            ) : (\n              <Typography>No violations found.</Typography>\n            )}\n            <Typography style={{ marginTop: '10px' }}>\n              Trench Width: {results.finalTrenchWidth || 'N/A'} inches\n            </Typography>\n            <Typography>\n              Trench Depth: {results.finalTrenchDepth || 'N/A'} inches\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ResultsDisplay;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,oBACEF,OAAA,CAACL,IAAI;IAACQ,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,eACzBL,OAAA,CAACL,IAAI;MAACW,IAAI;MAACC,EAAE,EAAE,EAAG;MAAAF,QAAA,eAChBL,OAAA,CAACH,IAAI;QAAAQ,QAAA,eACHL,OAAA,CAACF,WAAW;UAAAO,QAAA,gBACVL,OAAA,CAACJ,UAAU;YAACY,OAAO,EAAC,IAAI;YAAAH,QAAA,EAAC;UAAmB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACzDZ,OAAA,CAACJ,UAAU;YAAAS,QAAA,EAAC;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACnCV,OAAO,CAACW,UAAU,IAAIX,OAAO,CAACW,UAAU,CAACC,MAAM,GAAG,CAAC,GAClDZ,OAAO,CAACW,UAAU,CAACE,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACtCjB,OAAA,CAACJ,UAAU;YAAAS,QAAA,GAAa,IAAE,EAACW,SAAS;UAAA,GAAnBC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA2B,CAClD,CAAC,gBAEFZ,OAAA,CAACJ,UAAU;YAAAS,QAAA,EAAC;UAAoB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC7C,eACDZ,OAAA,CAACJ,UAAU;YAACsB,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAAd,QAAA,GAAC,gBAC1B,EAACH,OAAO,CAACkB,gBAAgB,IAAI,KAAK,EAAC,SACnD;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbZ,OAAA,CAACJ,UAAU;YAAAS,QAAA,GAAC,gBACI,EAACH,OAAO,CAACmB,gBAAgB,IAAI,KAAK,EAAC,SACnD;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACU,EAAA,GA1BIrB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
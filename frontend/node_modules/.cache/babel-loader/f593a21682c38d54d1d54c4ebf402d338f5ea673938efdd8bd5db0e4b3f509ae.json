{"ast":null,"code":"var _jsxFileName = \"/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/FormInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, TextField, Button, Select, MenuItem, InputLabel, FormControl, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [trenchType, setTrenchType] = useState('Distribution');\n  const [conduits, setConduits] = useState([]);\n  const handleAddConduit = () => {\n    setConduits([...conduits, {\n      type: '',\n      sizes: '',\n      count: ''\n    }]);\n  };\n  const handleInputChange = (index, field, value) => {\n    const updatedConduits = [...conduits];\n    updatedConduits[index][field] = value;\n    setConduits(updatedConduits);\n  };\n  const handleSubmit = () => {\n    onSubmit({\n      trenchType,\n      conduits\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Trench Calculation Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          label: \"Conduit Type\",\n          value: trenchType,\n          onChange: e => setTrenchType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Distribution\",\n            children: \"Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Service\",\n            children: \"Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), conduits.map((conduit, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: '18px',\n        marginLeft: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Conduit Type\",\n          value: conduit.type,\n          onChange: e => handleInputChange(index, 'type', e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Sizes (comma-separated)\",\n          value: conduit.sizes,\n          onChange: e => handleInputChange(index, 'sizes', e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Count\",\n          type: \"number\",\n          value: conduit.count,\n          onChange: e => handleInputChange(index, 'count', e.target.value),\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleAddConduit,\n        children: \"Add Conduit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          marginTop: '10px'\n        },\n        onClick: handleSubmit,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FormInput, \"e1M9nJHhgRcUlW+9RP3VP0AJXwU=\");\n_c = FormInput;\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["React","useState","Grid","TextField","Button","Select","MenuItem","InputLabel","FormControl","Typography","jsxDEV","_jsxDEV","FormInput","onSubmit","_s","trenchType","setTrenchType","conduits","setConduits","handleAddConduit","type","sizes","count","handleInputChange","index","field","value","updatedConduits","handleSubmit","container","spacing","style","padding","children","item","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","label","onChange","e","target","map","conduit","marginTop","marginLeft","color","onClick","_c","$RefreshReg$"],"sources":["/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/FormInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Grid,\n  TextField,\n  Button,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormControl,\n  Typography,\n} from '@mui/material';\n\nconst FormInput = ({ onSubmit }) => {\n  const [trenchType, setTrenchType] = useState('Distribution');\n  const [conduits, setConduits] = useState([]);\n\n  const handleAddConduit = () => {\n    setConduits([...conduits, { type: '', sizes: '', count: '' }]);\n  };\n\n  const handleInputChange = (index, field, value) => {\n    const updatedConduits = [...conduits];\n    updatedConduits[index][field] = value;\n    setConduits(updatedConduits);\n  };\n\n  const handleSubmit = () => {\n    onSubmit({ trenchType, conduits });\n  };\n\n  return (\n    <Grid container spacing={3} style={{ padding: '20px' }}>\n      <Grid item xs={12}>\n        <Typography variant=\"h5\">Trench Calculation Input</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl fullWidth>\n         {/* <InputLabel>Trench Type</InputLabel> */}\n          <Select\n\t\t    label=\"Conduit Type\"\n            value={trenchType}\n            onChange={(e) => setTrenchType(e.target.value)}\n          >\n            <MenuItem value=\"Distribution\">Distribution</MenuItem>\n            <MenuItem value=\"Service\">Service</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      {conduits.map((conduit, index) => (\n        <Grid container spacing={2} key={index} style={{ marginTop: '18px', marginLeft: '10px'}}>\n          <Grid item xs={4}>\n            <TextField\n              label=\"Conduit Type\"\n              value={conduit.type}\n              onChange={(e) =>\n                handleInputChange(index, 'type', e.target.value)\n              }\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              label=\"Sizes (comma-separated)\"\n              value={conduit.sizes}\n              onChange={(e) =>\n                handleInputChange(index, 'sizes', e.target.value)\n              }\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <TextField\n              label=\"Count\"\n              type=\"number\"\n              value={conduit.count}\n              onChange={(e) =>\n                handleInputChange(index, 'count', e.target.value)\n              }\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item xs={12}>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleAddConduit}>\n          Add Conduit\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          style={{ marginTop: '10px' }}\n          onClick={handleSubmit}\n        >\n          Calculate\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FormInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
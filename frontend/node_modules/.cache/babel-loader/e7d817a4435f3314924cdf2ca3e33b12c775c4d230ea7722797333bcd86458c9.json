{"ast":null,"code":"var _jsxFileName = \"/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/ResultsDisplay.js\";\n/**\n * \n */\nimport React from 'react';\nimport { Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsDisplay = ({\n  results\n}) => {\n  if (!results) return null;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Violations:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), results.violations.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No violations found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this) : results.violations.map((violation, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        children: violation\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Trench Width: \", results.finalTrenchWidth, \" inches\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Trench Depth: \", results.finalTrenchDepth, \" inches\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ResultsDisplay;\nexport default ResultsDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultsDisplay\");","map":{"version":3,"names":["React","Grid","Typography","jsxDEV","_jsxDEV","ResultsDisplay","results","container","spacing","children","item","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","violations","length","map","violation","index","finalTrenchWidth","finalTrenchDepth","_c","$RefreshReg$"],"sources":["/Users/masood/default-workspace/trench-calculation-microservice/frontend/src/components/ResultsDisplay.js"],"sourcesContent":["/**\n * \n */\nimport React from 'react';\nimport { Grid, Typography } from '@mui/material';\n\nconst ResultsDisplay = ({ results }) => {\n  if (!results) return null;\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">Violations:</Typography>\n        {results.violations.length === 0 ? (\n          <Typography>No violations found.</Typography>\n        ) : (\n          results.violations.map((violation, index) => (\n            <Typography key={index}>{violation}</Typography>\n          ))\n        )}\n      </Grid>\n      <Grid item xs={6}>\n        <Typography>Trench Width: {results.finalTrenchWidth} inches</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Typography>Trench Depth: {results.finalTrenchDepth} inches</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ResultsDisplay;\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI;EAEzB,oBACEF,OAAA,CAACH,IAAI;IAACM,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,gBACzBL,OAAA,CAACH,IAAI;MAACS,IAAI;MAACC,EAAE,EAAE,EAAG;MAAAF,QAAA,gBAChBL,OAAA,CAACF,UAAU;QAACU,OAAO,EAAC,IAAI;QAAAH,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAChDV,OAAO,CAACW,UAAU,CAACC,MAAM,KAAK,CAAC,gBAC9Bd,OAAA,CAACF,UAAU;QAAAO,QAAA,EAAC;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,GAE7CV,OAAO,CAACW,UAAU,CAACE,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACtCjB,OAAA,CAACF,UAAU;QAAAO,QAAA,EAAcW;MAAS,GAAjBC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CAChD,CACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACPZ,OAAA,CAACH,IAAI;MAACS,IAAI;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,eACfL,OAAA,CAACF,UAAU;QAAAO,QAAA,GAAC,gBAAc,EAACH,OAAO,CAACgB,gBAAgB,EAAC,SAAO;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACPZ,OAAA,CAACH,IAAI;MAACS,IAAI;MAACC,EAAE,EAAE,CAAE;MAAAF,QAAA,eACfL,OAAA,CAACF,UAAU;QAAAO,QAAA,GAAC,gBAAc,EAACH,OAAO,CAACiB,gBAAgB,EAAC,SAAO;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACQ,EAAA,GAvBInB,cAAc;AAyBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}